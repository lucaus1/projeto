#Include "RwMake.ch"
#Include "Topconn.ch"        


/*
Desenvolvedor: Ellcyo Castro
Data.........: 21/12/2006
Objetivo.....: Relatório Lista de Veículos
*************************************************************************************************************************************
** Alterações * Favor Adicionar Todas as Alteração Realizadas ***********************************************************************
*************************************************************************************************************************************
|Data			 | Programador				| Alteração
*************************************************************************************************************************************
|            |                      |
*************************************************************************************************************************************/

User Function PTREST01()
	Local cString := "SN1"
	Local Tamanho := "G"
	Local wnRel   := "PTREST"
	Local cDesc1  := ""
	Local cDesc2  := ""
	Local cDesc3  := ""
	
	Private aReturn     := { "Zebrado", 1,"Administracao", 1, 2, 1, "",1 }
	Private aLinha      := {}
	Private aPerg       := {}
	Private nLastKey    := 0
	
	Private _cEndereco  := ""
	Private _cEmpresa   := ""
	Private _cSeparacao := Replicate("-",132)
	Private _cSituacao  := ""
	Private _cQuery     := ""
	
	Private _cFilial     := ""
	Private _cFilial2    := ""
	
	Private Titulo      := "LISTA DE VEICULOS"
	Private NomeProg    := "PTREST"
	Private cPerg       := "PTREST"
	Private aOrd        := {}
	
	//- Defindo grupo de perguntas
	dbSelectArea("SX1")
	dbSetOrder(1)
	//- Defindo grupo de perguntas
	aAdd(aPerg, {cPerg, "01", "Cod Veic. de ?","mv_ch1","C",10,0,1,"G","","mv_par01","","PT1","","","","","","","","","","","","",""})
	aAdd(aPerg, {cPerg, "02", "Cod Veic. ate?","mv_ch2","C",10,0,1,"G","","mv_par02","","PT1","","","","","","","","","","","","",""})
	aAdd(aPerg, {cPerg, "03", "Grupo de     ?","mv_ch3","C",03,0,1,"G","","mv_par03","","P1" ,"","","","","","","","","","","","",""})
	aAdd(aPerg, {cPerg, "04", "Grupo ate    ?","mv_ch4","C",03,0,1,"G","","mv_par04","","P1" ,"","","","","","","","","","","","",""})
	
	//- Gravando grupo de perguntas
	For nA:= 1 To Len(aPerg)
		If !(dbSeek(cPerg+aPerg[nA,2]))
			RecLock("SX1",.t.)
			Replace X1_GRUPO    with aPerg[nA][1]
			Replace X1_ORDEM    with aPerg[nA][2]
			Replace X1_PERGUNT  with aPerg[nA][3]
			Replace X1_PERSPA   with aPerg[nA][3]
			Replace X1_PERENG   with aPerg[nA][3]
			Replace X1_VARIAVL  with aPerg[nA][4]
			Replace X1_TIPO     with aPerg[nA][5]
			Replace X1_TAMANHO  with aPerg[nA][6]
			Replace X1_GSC      with aPerg[nA][9]
			Replace X1_DECIMAL  with aPerg[nA][7]
			Replace X1_PRESEL   with aPerg[nA][8]
			Replace X1_DEF01    with aPerg[nA][12]
			Replace X1_DEF02    with aPerg[nA][15]
			Replace X1_DEFSPA1  with aPerg[nA][12]
			Replace X1_DEFSPA2  with aPerg[nA][15]
			Replace X1_DEFENG1  with aPerg[nA][12]
			Replace X1_DEFENG2  with aPerg[nA][15]
			Replace X1_F3       with aPerg[nA][13]
			MsUnlock()
		Endif
	Next
	
	Pergunte(cPerg,.F.)
	
	wnRel := SetPrint(cString,wnrel,cPerg,@titulo,cDesc1,cDesc2,cDesc3,.T.,aOrd,,Tamanho)
	
	wnrel := "PTREST" //- Nome Default do relatorio em Disco
	
	If nLastKey = 27
		Return
	Endif
	
	SetDefault(aReturn,cString)
	
	If nLastKey = 27
		Return
	Endif
	
	RptStatus({|lEnd| PTRESTIMP(@lEnd,wnRel,cString)},titulo)
Return


Static Function PTRESTIMP(lEnd, wnRel, cString)
	Local Tamanho  := "G"
	Local Limite   := 132
	Local lContinua:= .t.,nTipo, n_Total
	Local Nomeprog := "PTREST"               
	
	SetPrvt("nComp,nNorm,p_negrit_l,p_reset,p_negrit_d")
	p_negrit_l:= "E"
	p_reset:= "@"
	p_negrit_d:= "F"
	
	nTipo := Iif(aReturn[4]=1,15,18)
	m_pag := 1
	li    := 80
	Titulo:= "LISTA DE VEICULOS - OLEO DIESEL - POR GRUPO"
	
	nNorm:= GetMV("MV_NORM")
	
	//***************************************************************************************
	// Validação do Cabeçalho do Relatório
	_cEmpresa  := SM0->M0_NOMECOM
	_cEndereco := SM0->M0_ENDCOB
	_cCNPJ     := SM0->M0_CGC
	//*****************************************************************************************************************
	//** Final do Procedimento ****************************************************************************************
	//*****************************************************************************************************************

	_cQuery := "SELECT COUNT(*) AS QUANT "
	_cQuery += "FROM "+ RetSqlName("SN1") +" "
	_cQuery += "WHERE N1_YGRUPO <> '' AND D_E_L_E_T_ <> '*' AND "
	_cQuery += "N1_CBASE BETWEEN '"+ mv_par01 +"' AND '"+ mv_par02 +"' AND N1_YGRUPO BETWEEN '"+ mv_par03 +"' AND '"+ mv_par04 +"' "
	TcQuery _cQuery New Alias qQTD
	
	_cQuery := "SELECT N1_CBASE, N1_DESCRIC, N1_YGRUPO, N1_YKML, N1_YFATOR, N1_PLACA, N1_CHASSIS "
	_cQuery += "FROM "+ RetSqlName("SN1") +" "
	_cQuery += "WHERE N1_YGRUPO <> '' AND D_E_L_E_T_ <> '*' AND "
	_cQuery += "N1_CBASE BETWEEN '"+ mv_par01 +"' AND '"+ mv_par02 +"' AND N1_YGRUPO BETWEEN '"+ mv_par03 +"' AND '"+ mv_par04 +"' "
	_cQuery += "ORDER BY N1_YGRUPO, N1_DESCRIC "
	TcQuery _cQuery New Alias qSN1
	
	_nPg := 0
	_cGrupo := ""
	_nCount := 0
	
	dbSelectArea("qSN1")
	SetRegua(qQTD->QUANT)
	dbGotop()
	
	Do While !Eof()
		If lEnd
			@Prow()+1,001 PSay OemToAnsi("Cancelado pelo operador")
			lContinua := .F.
			Exit
		Endif
		
		If li > 58
			_nPg++
			
			// Inicio da Impressao
			@0, 000 PSay Chr(15)
			@0, 000 PSay aValImp(80)
			@0, 000 PSay "Empresa..: " + _cEmpresa
			@0, 115 PSay "Pagina.: " + str(_nPg, 8)
			@1, 000 PSay "Endereco.: " + _cEndereco
			@1, 115 PSay "Emissao: " + DtoC(Date())
			@2, 000 PSay "CNPJ.....: " + _cCNPJ
			@2, 115 PSay "Hora...: "   + Time()
			@4, ((132-Len(Titulo))/2) PSay Titulo
			@5, 000 PSay _cSeparacao
			
			@6, 000 PSay "CODIGO      VEICULO                                   PLACA    GRUPO-DESCRICAO                     FATOR          KM IDEAL"                             
			//            0000000000  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA  AAA0000  000-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA  AAAAAAAAAAAAA    999.99
			//            0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
			//            0         1         2         3         4         5         6         7         8         9       100       110       120       130  
			@7, 000 PSay _cSeparacao                                                                                                                                                                                                 
			li := 8
		Endif
		
		@li, 000 PSay qSN1->N1_CBASE
		@li, 012 PSay qSN1->N1_DESCRIC
		@li, 054 PSay qSN1->N1_PLACA
		@li, 063 PSay qSN1->N1_YGRUPO + "-" + PadR(Posicione("SX5",1,xFilial("SX5") + "P1" + qSN1->N1_YGRUPO,"X5_DESCRI"),30)
		@li, 099 PSay IIf(qSN1->N1_YFATOR=="1","QUILOMETRAGEM","HORIMETRO")
		@li, 116 PSay Transform(qSN1->N1_YKML, "@E 999.99")
		li++
		
		_nCount++
		_cGrupo := qSN1->N1_YGRUPO
		
				
		IncRegua()
		dbSkip()
		
		if _cGrupo != qSN1->N1_YGRUPO
			@li, 000 PSay _cSeparacao                                                                                                                                                                                                 
			li++
			@li, 000 PSay "Quantidade de Veiculos: " + StrZero(_nCount, 6) + "  [GRUPO - "+ PadR(Posicione("SX5",1,xFilial("SX5") + "P1" + _cGrupo,"X5_DESCRI"),30) +"]"
			li++
			@li, 000 PSay _cSeparacao                                                                                                                                                                                                 
			li++
			li++
			
			_cGrupo := qSN1->N1_YGRUPO                         
			_nCount := 0
		EndIf
		
	EndDo
		
	@61, 000 PSay _cSeparacao                                                                                                                                                                                                 
	@62, 000 PSay Replicate("<", 58) + "FIM DO RELATORIO" + Replicate(">", 58)
	@63, 000 PSay _cSeparacao                                                                                                                                                                                                 


	Set Device to Screen
	
	If aReturn[5] = 1
		Set Printer To
		Commit
		Ourspool(wnrel)
	Endif
	MS_FLUSH()
	
	qSN1->(dbCloseArea())
	qQTD->(dbCloseArea())
Return