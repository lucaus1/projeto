#include "rwmake.ch"        // incluido pelo assistente de conversao do AP5 IDE em 19/05/01
#IFNDEF WINDOWS
	#DEFINE PSAY SAY
#ENDIF
// ALTERACOES
/*
  DATA       TECNICO        DESCRICAO
  02/06/06   FRANCINEY      POSICAO DOS ITENS, CF, SIT TRIB,    
  08/06/2006 Franciney      xConver := mv_par17     
  08/06/2006 Franciney      mv_par18 - texto em parametro para unidade de fardos, pacotes, pecas
  13/06/2003 Franciney      Layout: Natureza de Operaçao, Nome do Cliente, posicao -2 de CF, UM... dos itens da nota
  13/06/2003 Franciney      Layout: posicao de Placa e UF da Transportadora
  13/06/2006 Franciney      F2_HORASNF para hora na nfs
  22/02/2007 Franciney      Comentado certificado FSC
  26/02/2007 Franciney      xCOD_MENS=="001"
  05/03/2007 Franciney      Posicionamento da formula 001 e 002, codigo certificacao
  05/03/2007 Franciney      Mensagem dispensa do DOF
  05/03/2007 Franciney      Mensagem para venda ZFM   
  09/10/2007 Franciney      Recomposicao do valor total de produtos sem abater o icms presumido
	@ 38, 128  PSAY (xVALOR_MERC+nIcmsPresumido) Picture"@E@Z 999,999,999.99"  // Valor Tot. Prod.
  09/10/2007 Franciney      Afastamento do campo de icms presumido
  

*/

User Function NFsMil()        // incluido pelo assistente de conversao do AP5 IDE em 19/05/01
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Declaracao de variaveis utilizadas no programa atraves da funcao    ³
	//³ SetPrvt, que criara somente as variaveis definidas pelo usuario,    ³
	//³ identificando as variaveis publicas do sistema utilizadas no codigo ³
	//³ Incluido pelo assistente de conversao do AP5 IDE                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	SetPrvt("CBTXT,CBCONT,NORDEM,ALFA,Z,M")
	SetPrvt("NCOL,NAJUSTE,NTAMOBS,TAMANHO,XUNEMB,AUNEMB")
	SetPrvt("XSERIE_SF,XNUM_SF,LIMITE,TITULO,CDESC1,CDESC2")
	SetPrvt("CDESC3,CNATUREZA,ARETURN,NOMEPROG,CPERG,NLASTKEY")
	SetPrvt("LCONTINUA,NLIN,WNREL,NTAMNF,CSTRING,CPEDANT")
	SetPrvt("NLININI,XNUM_NF,XSERIE,XEMISSAO,XTOT_FAT,XTXCAMBIO")
	SetPrvt("XTNCONTAI,XSAIDA,xHSaida,XLOJA,XFRETE,XSEGURO,XBASE_ICMS")
	SetPrvt("XBASE_IPI,XVALOR_ICMS,XICMS_RET,XVALOR_IPI,XVALOR_MERC,XNUM_DUPLIC")
	SetPrvt("XCOND_PAG,XPBRUTO,XPLIQUI,XTIPO,XVOLUME,CPEDATU")
	SetPrvt("CITEMATU,XPED_VEND,XITEM_PED,XNUM_NFDV,XQTDCF,XPREF_DV")
	SetPrvt("XICMS,XCOD_PRO,XQTD_PRO,XPRE_UNI,XPRE_TAB,XIPI")
	SetPrvt("XVAL_IPI,XDESC,XVAL_DESC,XVAL_MERC,XTES,XCF")
	SetPrvt("XICMSOL,XICM_PROD,XTOTQTD,XPESO_PRO,XPESO_UNIT,XDESCRICAO")
	SetPrvt("XUNID_PRO,XCOD_TRIB,XMEN_TRIB,XCOD_FIS,XCLAS_FIS,XMEN_POS,xCLASFIS,xPLACA,xPLACA2,XUF,XUF2")
	SetPrvt("XISS,XTIPO_PRO,XLUCRO,XCLFISCAL,XPESO_LIQ,I")
	SetPrvt("NPELEM,_CLASFIS,NPTESTE,XPED,XPESO_BRUTO,XP_LIQ_PED")
	SetPrvt("XCLIENTE,XTIPO_CLI,XCOD_MENS,XMENSAGEM,XTPFRETE,XCONDPAG")
	SetPrvt("XESPECIE,XCOD_VEND,XDESC_NF,XDESC_PAG,XPED_CLI,XDESC_PRO")
	SetPrvt("XTAB_A,XTAB_B,J,XCOD_CLI,XNOME_CLI,XEND_CLI")
	SetPrvt("XBAIRRO,XCEP_CLI,XCOB_CLI,XREC_CLI,XMUN_CLI,XEST_CLI")
	SetPrvt("XCGC_CLI,XINSC_CLI,XTRAN_CLI,XTEL_CLI,XFAX_CLI,XSUFRAMA")
	SetPrvt("XCALCSUF,ZFRANCA,XVENDEDOR,XBSICMRET,XNOME_TRANSP,XEND_TRANSP")
	SetPrvt("XMUN_TRANSP,XEST_TRANSP,XVIA_TRANSP,XCGC_TRANSP,XTEL_TRANSP,XPARC_DUP")
	SetPrvt("XVENC_DUP,XVALOR_DUP,XDUPLICATAS,XNATUREZA,XFORNECE,XNFORI")
	SetPrvt("XPEDIDO,XPESOPROD,XFAX,NOPC,CCOR,NTAMDET")
	SetPrvt("XB_ICMS_SOL,XV_ICMS_SOL,XTOTQTDCF,TRACO,UNEMB,TDESC")
	SetPrvt("NCONT,BB,NRCGC,Y,lIcmsPresumido,nIcmsPresumido")
	
	#IFNDEF WINDOWS
		// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 19/05/01 ==> 	#DEFINE PSAY SAY
	#ENDIF
	
	/*/
	ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Programa  ³  NFSMIL  ³ Autor ³   Marcos Simidu       ³ Data ³ 20/12/95 ³±±
	±±³FONTE     ³          ³ ALTER ³   Franciney Alves     ³ Data ³ 28/02/97 ³±±
	±±³FONTE     ³          ³ ALTER ³   Gustavo Cunha       ³ Data ³ 18/04/06 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Nota Fiscal de Entrada/Saida                               ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Uso       ³ Especifico para Clientes Microsiga                         ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
	/*/
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define Variaveis Ambientais                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                         ³
	//³ mv_par01             // Da Nota Fiscal                       ³
	//³ mv_par02             // Ate a Nota Fiscal                    ³
	//³ mv_par03             // Da Serie                             ³
	//³ mv_par04             // Nota Fiscal de Entrada/Saida         ³
	//³ mv_par05             // Codigo Fiscal                        ³
	//³ mv_par06             // Imprime Texto                        ³
	//³ mv_par07             // Imprime Texto                        ³
	//³ mv_par08             // Imprime Texto                        ³
	//³ mv_par09             // Imprime Texto                        ³
	//³ mv_par10             // Imprime Texto                        ³
	//³ mv_par11             // Marca                                ³
	//³ mv_par12             // ATPF                                 ³
	//³ mv_par13             // Imprime ATPF                         ³
	//³ mv_par14             // Lei Estadual   		                 ³
	//³ mv_par15             // Moeda         		                 ³
	//³ mv_par16             // Lei Federal   		                 ³     
	//  mv_par17             // valor invoice                                   
	//  mv_par18             // unidade de embarque para volumes: pacotes, pcs, cxs...
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	CbTxt:=""
	CbCont:=""
	nOrdem :=0
	Alfa := 0
	Z:=0
	M:=0
	NCOL:=06
	nAjuste := 0
	nTamObs:=150
	tamanho:="G"
	xUNEMB:={}
	AunEmb:={}
	xSERIE_SF:=SPACE(3)
	xNUM_SF  :=SPACE(6)
	lIcmsPresumido := .F.
	nIcmsPresumido := 0
	xConver:=0
	limite:=220
	titulo :=PADC("Nota Fiscal - Nfiscal",74)
	cDesc1 :=PADC("Este programa ira emitir a Nota Fiscal de Entrada/Saida",74)
	cDesc2 :=PADC("Foi adaptado para a MIl Madeireira Por Gustavo - Potencial",74)
	cDesc3 :=PADC("da Nfiscal",74)
	cNatureza:=""
	aReturn := { "Especial", 1,"Administracao", 1, 2, 1,"",1 }
	nomeprog:="nfiscal"
	cPerg:="NFSIGW"
	nLastKey:= 0
	lContinua := .T.
	nLin:=0
	wnrel    := "NFSIGW"
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Tamanho do Formulario de Nota Fiscal (em Linhas)          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	nTamNf:=72     // Apenas Informativo
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica as perguntas selecionadas, busca o padrao da Nfiscal           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	Pergunte(cPerg,.F.)               // Pergunta no SX1
	
	cString:="SF2"
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia controle para a funcao SETPRINT                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	wnrel:=SetPrint(cString,wnrel,cPerg,Titulo,cDesc1,cDesc2,cDesc3,.T.)
	
	If nLastKey == 27
		Return
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica Posicao do Formulario na Impressora                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SetDefault(aReturn,cString)
	
	If nLastKey == 27
		Return
	Endif
	
	VerImp()
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³                                                              ³
	//³ Inicio do Processamento da Nota Fiscal                       ³
	//³                                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF WINDOWS
		RptStatus({|| RptDetail()})// Substituido pelo assistente de conversao do AP5 IDE em 19/05/01 ==> 	RptStatus({|| Execute(RptDetail)})
		Return
		// Substituido pelo assistente de conversao do AP5 IDE em 19/05/01 ==> 	Function RptDetail
		Static Function RptDetail()
	#ENDIF
	
	If mv_par04 == 2
		dbSelectArea("SF2")                // * Cabecalho da Nota Fiscal Saida
		dbSetOrder(1)
		dbSeek(xFilial("SF2")+mv_par01+mv_par03,.t.)
		
		dbSelectArea("SD2")                // * Itens de Venda da Nota Fiscal
		dbSetOrder(3)
		dbSeek(xFilial("SD2")+mv_par01+mv_par03)
		cPedant := SD2->D2_PEDIDO
	Else
		dbSelectArea("SF1")                // * Cabecalho da Nota Fiscal Entrada
		DbSetOrder(1)
		dbSeek(xFilial("SF1")+mv_par01+mv_par03,.t.)
		
		dbSelectArea("SD1")                // * Itens da Nota Fiscal de Entrada
		dbSetOrder(3)
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa  regua de impressao                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SetRegua(Val(mv_par02)-Val(mv_par01))
	If mv_par04 == 2
		dbSelectArea("SF2")
		While !eof() .and. SF2->F2_DOC    <= mv_par02 .and. lContinua
			
			If SF2->F2_SERIE #mv_par03    // Se a Serie do Arquivo for Diferente
				DbSkip()                    // do Parametro Informado !!!
				Loop
			Endif
			
			#IFNDEF WINDOWS
				IF LastKey()==286
					@ 00,01 PSAY "** CANCELADO PELO OPERADOR **"
					lContinua := .F.
					Exit
				Endif
			#ELSE
				IF lAbortPrint
					@ 00,01 PSAY "** CANCELADO PELO OPERADOR **"
					lContinua := .F.
					Exit
				Endif
			#ENDIF
			
			nLinIni:=nLin                         // Linha Inicial da Impressao
			
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicio de Levantamento dos Dados da Nota Fiscal              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			// * Cabecalho da Nota Fiscal
			
			xNUM_NF     :=SF2->F2_DOC             // Numero
			xSERIE      :=SF2->F2_SERIE           // Serie
			xSERIE_SF   :=SF2->F2_SERIESF
			xNUM_SF     :=SF2->F2_NUSELOF
			xEMISSAO    :=SF2->F2_EMISSAO         // Data de Emissao
			xTOT_FAT    :=SF2->F2_VALFAT          // Valor Total da Fatura
			xTxCambio   :=SF2->F2_TXCAMB
			xTNCONTAI   :=SF2->F2_NCONTAI
			XSAIDA      :=SF2->F2_DATASNF
			xHSaida     :=SF2->F2_HORASNF
			
			if xTOT_FAT == 0
				xTOT_FAT := SF2->F2_VALMERC+SF2->F2_VALIPI+SF2->F2_SEGURO+SF2->F2_FRETE+SF2->F2_DESPESA
			endif
			
			xLOJA       :=SF2->F2_LOJA            // Loja do Cliente
			xFRETE      :=SF2->F2_FRETE           // Frete
			xSEGURO     :=SF2->F2_SEGURO          // Seguro
			xBASE_ICMS  :=SF2->F2_BASEICM         // Base   do ICMS
			xBASE_IPI   :=SF2->F2_BASEIPI         // Base   do IPI
			xVALOR_ICMS :=SF2->F2_VALICM          // Valor  do ICMS
			xICMS_RET   :=SF2->F2_ICMSRET         // Valor  do ICMS Retido
			xVALOR_IPI  :=SF2->F2_VALIPI          // Valor  do IPI
			xVALOR_MERC :=SF2->F2_VALMERC         // Valor  da Mercadoria
			xDESPESA    :=SF2->F2_DESPESA         // Outras Despesas Acessoriais
			xNUM_DUPLIC :=SF2->F2_DUPL            // Numero da Duplicata
			xCOND_PAG   :=SF2->F2_COND            // Condicao de Pagamento
			xPBRUTO     :=SF2->F2_PBRUTO          // Peso Bruto
			xPLIQUI     :=SF2->F2_PLIQUI          // Peso Liquido
			xTIPO       :=SF2->F2_TIPO            // Tipo do Cliente
			xVOLUME     :=SF2->F2_VOLUME1         // Volume 1 no Pedido
			xPLACA      :=SF2->F2_PLACACV         // Placa Cavalo
			xPLACA2     :=SF2->F2_PLACACT         // Placa Carreta
			xUF         :=SF2->F2_ESTCV           // UF Cavalo
			xUF2        :=SF2->F2_ESTCT           // UF Carreta
			dbSelectArea("SD2")                   // * Itens de Venda da N.F.
			dbSetOrder(3)
			dbSeek(xFilial("SD2")+xNUM_NF+xSERIE)
			cPedAtu := SD2->D2_PEDIDO
			cItemAtu := SD2->D2_ITEMPV
			xPED_VEND:={}                         // Numero do Pedido de Venda
			xITEM_PED:={}                         // Numero do Item do Pedido de Venda
			xNUM_NFDV:={}                         // nUMERO QUANDO HOUVER DEVOLUCAO
			xQTDCF   :={}                         // Quantidade de Chapas ou Fardos
			xPREF_DV :={}                         // Serie  quando houver devolucao
			xICMS    :={}                         // Porcentagem do ICMS
			xCOD_PRO :={}                         // Codigo  do Produto
			xQTD_PRO :={}                         // Peso/Quantidade do Produto
			xPRE_UNI :={}                         // Preco Unitario de Venda
			xPRE_TAB :={}                         // Preco Unitario de Tabela
			xIPI     :={}                         // Porcentagem do IPI
			xVAL_IPI :={}                         // Valor do IPI
			xDESC    :={}                         // Desconto por Item
			xVAL_DESC:={}                         // Valor do Desconto
			xVAL_MERC:={}                         // Valor da Mercadoria
			xTES     :={}                         // TES
			xCF      :={}                         // Classificacao quanto natureza da Operacao
			xICMSOL  :={}                         // Base do ICMS Solidario
			xICM_PROD:={}                         // ICMS do Produto
			xCOD_FIS :={}
			xCLASFIS :={}							//Classificacao Fiscal
			xTOTQTD  :=0
			
			while !eof() .and. SD2->D2_DOC==xNUM_NF .and. SD2->D2_SERIE==xSERIE
				If SD2->D2_SERIE #mv_par03        // Se a Serie do Arquivo for Diferente
					DbSkip()                   // do Parametro Informado !!!
					Loop
				Endif
				AADD(xPED_VEND ,SD2->D2_PEDIDO)
				AADD(xITEM_PED ,SD2->D2_ITEMPV)
				dbSelectArea("SC6")                    // * Itens de Pedido de Venda
				dbSetOrder(1)
				if dbSeek(xFilial("SC6")+SD2->D2_PEDIDO+SD2->D2_ITEMPV).AND. (Round(SD2->D2_PRCVEN,4) <> Round(SC6->C6_PRCVEN,4))
					AADD(xPRE_UNI  ,SC6->C6_PRCVEN)
					AADD(xDESC     ,SC6->C6_VALDESC)
					AADD(xVAL_MERC ,SC6->C6_VALOR)
					lIcmsPresumido := .T.
					nIcmsPresumido := nIcmsPresumido + ( SC6->C6_VALOR - SD2->D2_TOTAL)
				Else
					AADD(xPRE_UNI  ,SD2->D2_PRCVEN)
					AADD(xDESC     ,SD2->D2_DESC)
					AADD(xVAL_MERC ,SD2->D2_TOTAL)
				Endif
				DbSelectArea("SD2")
				AADD(xNUM_NFDV ,IIF(Empty(SD2->D2_NFORI),"",SD2->D2_NFORI))
				AADD(xPREF_DV  ,SD2->D2_SERIORI)
				AADD(xICMS     ,IIf(Empty(SD2->D2_PICM),0,SD2->D2_PICM))
				AADD(xCOD_PRO  ,SD2->D2_COD)
				AADD(xQTD_PRO  ,SD2->D2_QUANT)     // Guarda as quant. da NF
				AADD(xQTDCF    ,SD2->D2_QTDCF)   // Guarda os numero de Chapas ou Fardos
				AADD(xPRE_TAB  ,SD2->D2_PRUNIT)
				AADD(xIPI      ,IIF(Empty(SD2->D2_IPI),0,SD2->D2_IPI))
				AADD(xVAL_IPI  ,SD2->D2_VALIPI)
				AADD(xTES      ,SD2->D2_TES)
				AADD(xCF       ,SD2->D2_CF)
				AADD(xCLASFIS  ,SD2->D2_CLASFIS)
				AADD(xICM_PROD ,IIf(Empty(SD2->D2_PICM),0,SD2->D2_PICM))
				dbskip()
			Enddo
			
			dbSelectArea("SB1")                     // * Desc. Generica do Produto
			dbSetOrder(1)
			xPESO_PRO:={}                           // Peso Liquido
			xPESO_UNIT :={}                         // Peso Unitario do Produto
			xDESCRICAO :={}                         // Descricao do Produto
			xUNID_PRO:={}                           // Unidade do Produto
			xCOD_TRIB:={}                           // Codigo de Tributacao
			xMEN_TRIB:={}                           // Mensagens de Tributacao
			xCOD_FIS :={}                           // Cogigo Fiscal
			xCLAS_FIS:={}                           // Classificacao Fiscal
			xMEN_POS :={}                           // Mensagem da Posicao IPI
			xISS     :={}                           // Aliquota de ISS
			xTIPO_PRO:={}                           // Tipo do Produto
			xLUCRO   :={}                           // Margem de Lucro p/ ICMS Solidario
			xCLFISCAL :={}
			xPESO_LIQ := 0
			I:=1
			
			IF dbSeek(xFilial("SB1")+xCOD_PRO[I])
				For I:=1 to Len(xCOD_PRO)
					dbSeek(xFilial("SB1")+xCOD_PRO[I])
					AADD(xPESO_PRO ,SB1->B1_PESO * xQTD_PRO[I])
					xPESO_LIQ  := xPESO_LIQ + xPESO_PRO[I]
					AADD(xPESO_UNIT , SB1->B1_PESO)
					AADD(xUNID_PRO ,SB1->B1_UM)
					AADD(xDESCRICAO ,SB1->B1_DESC)
					AADD(xCOD_TRIB ,SB1->B1_ORIGEM)
					If Ascan(xMEN_TRIB, SB1->B1_ORIGEM)==0
						AADD(xMEN_TRIB ,SB1->B1_ORIGEM)
					Endif
					npElem := ascan(xCLAS_FIS,SB1->B1_POSIPI)
					if npElem == 0
						AADD(xCLAS_FIS,SB1->B1_POSIPI)
					endif
					npElem := ascan(xCLAS_FIS,SB1->B1_POSIPI)
					DO CASE
						CASE npElem == 1
							_CLASFIS := "A"
						CASE npElem == 2
							_CLASFIS := "B"
						CASE npElem == 3
							_CLASFIS := "C"
						CASE npElem == 4
							_CLASFIS := "D"
						CASE npElem == 5
							_CLASFIS := "E"
						CASE npElem == 6
							_CLASFIS := "F"
					ENDCASE
					nPteste := Ascan(xCLFISCAL,_CLASFIS)
					If nPteste == 0
						AADD(xCLFISCAL,_CLASFIS)
					Endif
					AADD(xCOD_FIS ,_CLASFIS)
					If SB1->B1_ALIQISS > 0
						AADD(xISS ,SB1->B1_ALIQISS)
					Endif
					AADD(xTIPO_PRO ,SB1->B1_TIPO)
					AADD(xLUCRO    ,SB1->B1_PICMRET)
					//
					// Calculo do Peso Liquido da Nota Fiscal
					//
					For X:=1 to Len(xPESO_PRO)
						xPESO_LIQ:=xPESO_LIQ+xPESO_PRO[X]
					Next
				Next
			ELSE
				ALERT("USUÁRIO ! VEJA O PRODUTO UTILIIZADO"+xCOD_PRO[I])
			ENDIF
			dbSelectArea("SC5")                            // * Pedidos de Venda
			dbSetOrder(1)
			xPED        := {}
			xPESO_BRUTO := 0
			xP_LIQ_PED  := 0
			For I:=1 to Len(xPED_VEND)				//Local onde esta sendo informado a xMENSAGEM
				dbSeek(xFilial()+xPED_VEND[I])
				If ASCAN(xPED,xPED_VEND[I])==0
					dbSeek(xFilial()+xPED_VEND[I])
					xCLIENTE    :=SC5->C5_CLIENTE            // Codigo do Cliente
					xTIPO_CLI   :=SC5->C5_TIPOCLI            // Tipo de Cliente
					xCOD_MENS   :=SC5->C5_MENPAD             // Codigo da Mensagem Padrao
					xMENSAGEM   :=SC5->C5_MENNOTA            // Mensagem para a Nota Fiscal
					xTPFRETE    :=SC5->C5_TPFRETE            // Tipo de Entrega
					xCONDPAG    :=SC5->C5_CONDPAG            // Condicao de Pagamento
					xPESO_BRUTO :=SC5->C5_PBRUTO             // Peso Bruto
					xP_LIQ_PED  :=xP_LIQ_PED + SC5->C5_PESOL // Peso Liquido
					xESPECIE    :=SC5->C5_ESPECI2            // Especie 1 no Pedido
					xCOD_VEND:= {SC5->C5_VEND1,;             // Codigo do Vendedor 1
					SC5->C5_VEND2,;             // Codigo do Vendedor 2
					SC5->C5_VEND3,;             // Codigo do Vendedor 3
					SC5->C5_VEND4,;             // Codigo do Vendedor 4
					SC5->C5_VEND5}              // Codigo do Vendedor 5
					xDESC_NF := {SC5->C5_DESC1,;             // Desconto Global 1
					SC5->C5_DESC2,;             // Desconto Global 2
					SC5->C5_DESC3,;             // Desconto Global 3
					SC5->C5_DESC4}              // Desconto Global 4
					AADD(xPED,xPED_VEND[I])
				Endif
				If xP_LIQ_PED >0
					xPESO_LIQ := xP_LIQ_PED
				Endif
			Next
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Pesquisa da Condicao de Pagto               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA1")                // * Cadastro de Clientes declarado para A1_EST //Potencial
			dbSetOrder(1)
			dbSeek(xFilial("SA1")+xCLIENTE+xLOJA)
			
			dbSelectArea("SE4")                    // Condicao de Pagamento
			dbSetOrder(1)
			dbSeek(xFilial("SE4")+xCONDPAG)
			xDESC_PAG := SE4->E4_DESCRI
			dbSelectArea("SC6")                    // * Itens de Pedido de Venda
			dbSetOrder(1)
			xPED_CLI :={}                          // Numero de Pedido
			xDESC_PRO:={}                          // Descricao aux do produto
			xUNEMB:={}                             // Unidade de Embarque
			xTAB_A:={}
			xTAB_B:={}
			J:=Len(xPED_VEND)
			For I:=1 to J
				dbSeek(xFilial("SC6")+xPED_VEND[I]+xITEM_PED[I])
				// * Cadastro de Especies SB5 B5_CEME //Potencial
				//dbSeek(xFilial("SB5")+SC6->C6_PRODUTO)
				AADD(xPED_CLI ,SC6->C6_PEDCLI)
				AADD(xDESC_PRO,IIF(SC6->C6_QTDAM<>0,ALLTRIM(STR(SC6->C6_QTDAM)),STR(0))+alltrim(mv_par18)+ " " + ALLTRIM(SC6->C6_DESCRI) + " " + IIF(SA1->A1_EST="EX","-" + Posicione("SB5",1,SC6->C6_FILIAL+SC6->C6_PRODUTO,"SB5->B5_CEME"),""))//)  //Potencial
				AADD(xVAL_DESC,SC6->C6_VALDESC)
				AADD(xUNEMB,ALLTRIM(SC6->C6_UNEMB))
				AADD(xTAB_A,SC6->C6_TABLA)
				AADD(xTAB_B,SC6->C6_TABLB)
			Next
			If xTIPO=='N' .OR. xTIPO=='C' .OR. xTIPO=='P' .OR. xTIPO=='I' .OR. xTIPO=='S' .OR. xTIPO=='T' .OR. xTIPO=='O'
				dbSelectArea("SA1")                // * Cadastro de Clientes
				dbSetOrder(1)
				dbSeek(xFilial("SA1")+xCLIENTE+xLOJA)
				xCOD_CLI :=SA1->A1_COD             // Codigo do Cliente
				xNOME_CLI:=SA1->A1_NOME            // Nome
				xEND_CLI :=SA1->A1_END             // Endereco
				xBAIRRO  :=SA1->A1_BAIRRO          // Bairro
				xCEP_CLI :=SA1->A1_CEP             // CEP
				xCOB_CLI :=SA1->A1_ENDCOB          // Endereco de Cobranca
				xREC_CLI :=SA1->A1_ENDENT          // Endereco de Entrega
				xMUN_CLI :=SA1->A1_MUN             // Municipio
				xEST_CLI :=SA1->A1_EST             // Estado
				xCGC_CLI :=SA1->A1_CGC             // CGC
				xINSC_CLI:=SA1->A1_INSCR           // Inscricao estadual
				xTRAN_CLI:=SA1->A1_TRANSP          // Transportadora
				xTEL_CLI :=SA1->A1_TEL             // Telefone
				xFAX_CLI :=SA1->A1_FAX             // Fax
				xSUFRAMA :=SA1->A1_SUFRAMA         // Codigo Suframa
				xCALCSUF :=SA1->A1_CALCSUF         // Calcula Suframa
				
				// Alteracao p/ Calculo de Suframa
				if !empty(xSUFRAMA) .and. xCALCSUF =="S"
					IF XTIPO == 'D' .OR. XTIPO == 'B'
						zFranca := .F.
					else
						zFranca := .F.   //Potencial .t. para .f.
					endif
				Else
					zfranca:= .F.
				endif
			Else
				zFranca:=.F.
				dbSelectArea("SA2")                // * Cadastro de Fornecedores
				dbSetOrder(1)
				dbSeek(xFilial()+xCLIENTE+xLOJA)
				xCOD_CLI :=SA2->A2_COD             // Codigo do Fornecedor
				xNOME_CLI:=SA2->A2_NOME            // Nome Fornecedor
				xEND_CLI :=SA2->A2_END             // Endereco
				xBAIRRO  :=SA2->A2_BAIRRO          // Bairro
				xCEP_CLI :=SA2->A2_CEP             // CEP
				xCOB_CLI :=""                      // Endereco de Cobranca
				xREC_CLI :=""                      // Endereco de Entrega
				xMUN_CLI :=SA2->A2_MUN             // Municipio
				xEST_CLI :=SA2->A2_EST             // Estado
				xCGC_CLI :=SA2->A2_CGC             // CGC
				xINSC_CLI:=SA2->A2_INSCR           // Inscricao estadual
				xTRAN_CLI:=SA2->A2_TRANSP          // Transportadora
				xTEL_CLI :=SA2->A2_TEL             // Telefone
				xFAX_CLI :=SA2->A2_FAX             // Fax
			Endif
			dbSelectArea("SA3")                   // * Cadastro de Vendedores
			dbSetOrder(1)
			xVENDEDOR:={}                         // Nome do Vendedor
			I:=1
			J:=Len(xCOD_VEND)
			For I:=1 to J
				dbSeek(xFilial("SA3")+xCOD_VEND[I])
				Aadd(xVENDEDOR,SA3->A3_NREDUZ)
			Next
			
			If xICMS_RET >0                          // Apenas se ICMS Retido > 0
				dbSelectArea("SF3")                   // * Cadastro de Livros Fiscais
				dbSetOrder(4)
				dbSeek(xFilial("SF3")+SA1->A1_COD+SA1->A1_LOJA+SF2->F2_DOC+SF2->F2_SERIE)
				If Found()
					xBSICMRET:=F3_VALOBSE
				Else
					xBSICMRET:=0
				Endif
			Else
				xBSICMRET:=0
			Endif
			dbSelectArea("SA4")                   // * Transportadoras
			dbSetOrder(1)
			dbSeek(xFilial("SA4")+SF2->F2_TRANSP)
			xNOME_TRANSP :=SA4->A4_NOME           // Nome Transportadora
			xEND_TRANSP  :=SA4->A4_END            // Endereco
			xMUN_TRANSP  :=SA4->A4_MUN            // Municipio
			xEST_TRANSP  :=SA4->A4_EST            // Estado
			xVIA_TRANSP  :=SA4->A4_VIA            // Via de Transporte
			xCGC_TRANSP  :=SA4->A4_CGC            // CGC
			xTEL_TRANSP  :=SA4->A4_TEL            // Fone
			dbSelectArea("SE1")                   // * Contas a Receber
			dbSetOrder(1)
			xPARC_DUP  :={}                       // Parcela
			xVENC_DUP  :={}                       // Vencimento
			xVALOR_DUP :={}                       // Valor
			xDUPLICATAS:=IIF(dbSeek(xFilial("SE1")+xSERIE+xNUM_DUPLIC,.T.),.T.,.F.) // Flag p/Impressao de Duplicatas
			while !eof() .and. SE1->E1_NUM==xNUM_DUPLIC .and. xDUPLICATAS==.T.
				If !("NF" $ SE1->E1_TIPO)
					dbSkip()
					Loop
				Endif
				AADD(xPARC_DUP ,SE1->E1_PARCELA)
				AADD(xVENC_DUP ,SE1->E1_VENCTO)
				AADD(xVALOR_DUP,SE1->E1_VALOR)
				dbSkip()
			EndDo
			dbSelectArea("SF4")                   // * Tipos de Entrada e Saida
			DbSetOrder(1)
			dbSeek(xFilial("SF4")+xTES[1])
			xNATUREZA:=SF4->F4_TEXTO              // Natureza da Operacao
			Imprime()
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Termino da Impressao da Nota Fiscal                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			IncRegua()                    // Termometro de Impressao
			nLin:=0
			dbSelectArea("SF2")
			dbSkip()                      // passa para a proxima Nota Fiscal
		End
	Else
		
		dbSelectArea("SF1")              // * Cabecalho da Nota Fiscal Entrada
		
		dbSeek(xFilial("SF1")+mv_par01+mv_par03,.t.)
		
		While !eof() .and. SF1->F1_DOC <= mv_par02 .and. SF1->F1_SERIE == mv_par03 .and. lContinua
			
			If SF1->F1_SERIE #mv_par03    // Se a Serie do Arquivo for Diferente
				DbSkip()                    // do Parametro Informado !!!
				Loop
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa  regua de impressao                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			SetRegua(Val(mv_par02)-Val(mv_par01))
			
			#IFNDEF WINDOWS
				IF LastKey()==286
					@ 00,01 PSAY "** CANCELADO PELO OPERADOR **"
					lContinua := .F.
					Exit
				Endif
			#ELSE
				IF lAbortPrint
					@ 00,01 PSAY "** CANCELADO PELO OPERADOR **"
					lContinua := .F.
					Exit
				Endif
			#ENDIF
			
			nLinIni:=nLin                         // Linha Inicial da Impressao
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicio de Levantamento dos Dados da Nota Fiscal              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			xNUM_NF     :=SF1->F1_DOC             // Numero
			xSERIE      :=SF1->F1_SERIE           // Serie
			xFORNECE    :=SF1->F1_FORNECE         // Cliente/Fornecedor
			xEMISSAO    :=SF1->F1_EMISSAO         // Data de Emissao
			XSAIDA      :=SF1->F1_EMISSAO         // DATA DE ENTRADA
			xHSaida     := "  "
			xTOT_FAT    :=SF1->F1_VALBRUT         // Valor Bruto da Compra
			xLOJA       :=SF1->F1_LOJA            // Loja do Cliente
			xFRETE      :=SF1->F1_FRETE           // Frete
			xSEGURO     :=SF1->F1_DESPESA         // Despesa
			xBASE_ICMS  :=SF1->F1_BASEICM         // Base   do ICMS
			xBASE_IPI   :=SF1->F1_BASEIPI         // Base   do IPI
			xBSICMRET   :=SF1->F1_BRICMS          // Base do ICMS Retido
			xVALOR_ICMS :=SF1->F1_VALICM          // Valor  do ICMS
			xICMS_RET   :=SF1->F1_ICMSRET         // Valor  do ICMS Retido
			xVALOR_IPI  :=SF1->F1_VALIPI          // Valor  do IPI
			xVALOR_MERC :=SF1->F1_VALMERC         // Valor  da Mercadoria
			xNUM_DUPLIC :=SF1->F1_DUPL            // Numero da Duplicata
			xCOND_PAG   :=SF1->F1_COND            // Condicao de Pagamento
			xTIPO       :=SF1->F1_TIPO            // Tipo do Cliente
			xNFORI      :=SF1->F1_NFORI           // NF Original
			xPREF_DV    :=SF1->F1_SERIORI         // Serie Original
			
			dbSelectArea("SD1")                   // * Itens da N.F. de Compra
			dbSetOrder(1)
			dbSeek(xFilial("SD1")+xNUM_NF+xSERIE+xFORNECE+xLOJA)
			cPedAtu := SD1->D1_PEDIDO
			cItemAtu:= SD1->D1_ITEMPC
			xPEDIDO  :={}                         // Numero do Pedido de Compra
			xITEM_PED:={}                         // Numero do Item do Pedido de Compra
			xQTDCF   :={}                         // Quantidade de Chapas ou Fardos
			xNUM_NFDV:={}                         // Numero quando houver devolucao
			xPREF_DV :={}                         // Serie  quando houver devolucao
			xICMS    :={}                         // Porcentagem do ICMS
			xCOD_PRO :={}                         // Codigo  do Produto
			xQTD_PRO :={}                         // Peso/Quantidade do Produto
			xPRE_UNI :={}                         // Preco Unitario de Compra
			xIPI     :={}                         // Porcentagem do IPI
			xPESOPROD:={}                         // Peso do Produto
			xVAL_IPI :={}                         // Valor do IPI
			xDESC    :={}                         // Desconto por Item
			xVAL_DESC:={}                         // Valor do Desconto
			xVAL_MERC:={}                         // Valor da Mercadoria
			xTES     :={}                         // TES
			xCF      :={}                         // Classificacao quanto natureza da Operacao
			xICMSOL  :={}                         // Base do ICMS Solidario
			xICM_PROD:={}                         // ICMS do Produto
			while !eof() .and. SD1->D1_DOC==xNUM_NF
				If SD1->D1_SERIE #mv_par03        // Se a Serie do Arquivo for Diferente
					DbSkip()                      // do Parametro Informado !!!
					Loop
				Endif
				AADD(xPEDIDO ,SD1->D1_PEDIDO)           // Ordem de Compra
				AADD(xITEM_PED ,SD1->D1_ITEMPC)         // Item da O.C.
				AADD(xNUM_NFDV ,IIF(Empty(SD1->D1_NFORI),"",SD1->D1_NFORI))
				AADD(xQTDCF    ,SD1->D1_QUANT)         // Guarda os numero de Chapas ou Fardos
				AADD(xPREF_DV  ,SD1->D1_SERIORI)       // Serie Original
				AADD(xICMS     ,IIf(Empty(SD1->D1_PICM),0,SD1->D1_PICM))
				AADD(xCOD_PRO  ,SD1->D1_COD)            // Produto
				AADD(xQTD_PRO  ,SD1->D1_QUANT)          // Guarda as quant. da NF
				AADD(xPRE_UNI  ,SD1->D1_VUNIT)          // Valor Unitario
				AADD(xIPI      ,SD1->D1_IPI)            // % IPI
				AADD(xVAL_IPI  ,SD1->D1_VALIPI)         // Valor do IPI
				AADD(xPESOPROD ,SD1->D1_PESO)           // Peso do Produto
				AADD(xDESC     ,SD1->D1_DESC)           // % Desconto
				AADD(xVAL_MERC ,SD1->D1_TOTAL)          // Valor Total
				AADD(xTES      ,SD1->D1_TES)            // Tipo de Entrada/Saida
				AADD(xCF       ,SD1->D1_CF)             // Codigo Fiscal
				AADD(xICM_PROD ,IIf(Empty(SD1->D1_PICM),0,SD1->D1_PICM))
				dbskip()
			End
			// ALTERACAO FRANCINEY
			// TRATAMENTO DE ITENS DE PEDIDO OU NOTA FISCAL DE ENTRADA
			// PREPARACAO DO VETOR PARA BUSCAR DESCRICAO E OUTROS DADOS
			// REFERENTES AOS PRODUTOS
			dbSelectArea("SD1")                    // * Itens de Pedido de COMPRAS
			xPED_CLI :={}                          // Numero de Pedido
			xDESC_PRO:={}                          // Descricao aux do produto
			xUNEMB:={}                             // Unidade de Embarque
			J:=Len(xPEDIDO)
			For I:=1 to J
				dbSeek(xFilial("SD1")+xPEDIDO[I]+xITEM_PED[I])
				AADD(xPED_CLI ,SD1->D1_PEDIDO)
				DbSelectArea("SB1")
				DbSeek(xFilial("SB1")+SD1->D1_COD)
				AADD(xDESC_PRO,SB1->B1_DESC)      // DESCRICAO DO PRODUTO
				dbSelectArea("SD1")               // * Itens de Pedido de COMPRAS
				AADD(xVAL_DESC,SD1->D1_VALDESC)   // VALOR TOTAL DE DESCONTO
				AADD(xUNEMB,ALLTRIM(SD1->D1_UM))  // UNIDADE DE MEDIDA
			Next
			dbSelectArea("SB1")                 // * Desc. Generica do Produto
			dbSetOrder(1)
			xUNID_PRO:={}                       // Unidade do Produto
			xDESC_PRO:={}                       // Descricao do Produto
			xMEN_POS :={}                       // Mensagem da Posicao IPI
			xDESCRICAO :={}                     // Descricao do Produto
			xCOD_TRIB:={}                       // Codigo de Tributacao
			xMEN_TRIB:={}                       // Mensagens de Tributacao
			xCOD_FIS :={}                       // Codigo Fiscal
			xCLAS_FIS:={}                       // Classificacao Fiscal
			xISS     :={}                       // Aliquota de ISS
			xTIPO_PRO:={}                       // Tipo do Produto
			xLUCRO   :={}                       // Margem de Lucro p/ ICMS Solidario
			xCLFISCAL   :={}
			xSUFRAMA :=""
			xCALCSUF :=""
			
			I:=1
			IF dbSeek(xFilial("SB1")+xCOD_PRO[I])
				For I:=1 to Len(xCOD_PRO)
					dbSeek(xFilial("SB1")+xCOD_PRO[I])
					dbSelectArea("SB1")
					AADD(xDESC_PRO ,SB1->B1_DESC)
					AADD(xUNID_PRO ,SB1->B1_UM)
					AADD(xCOD_TRIB ,SB1->B1_ORIGEM)
					If Ascan(xMEN_TRIB, SB1->B1_ORIGEM)==0
						AADD(xMEN_TRIB ,SB1->B1_ORIGEM)
					Endif
					AADD(xDESCRICAO ,SB1->B1_DESC)
					AADD(xMEN_POS  ,SB1->B1_POSIPI)
					If SB1->B1_ALIQISS > 0
						AADD(xISS,SB1->B1_ALIQISS)
					Endif
					AADD(xTIPO_PRO ,SB1->B1_TIPO)
					AADD(xLUCRO    ,SB1->B1_PICMRET)
					npElem := ascan(xCLAS_FIS,SB1->B1_POSIPI)
					if npElem == 0
						AADD(xCLAS_FIS  ,SB1->B1_POSIPI)
					endif
					npElem := ascan(xCLAS_FIS,SB1->B1_POSIPI)
					DO CASE
						CASE npElem == 1
							_CLASFIS := "A"
						CASE npElem == 2
							_CLASFIS := "B"
						CASE npElem == 3
							_CLASFIS := "C"
						CASE npElem == 4
							_CLASFIS := "D"
						CASE npElem == 5
							_CLASFIS := "E"
						CASE npElem == 6
							_CLASFIS := "F"
					EndCase
					nPteste := Ascan(xCLFISCAL,_CLASFIS)
					If nPteste == 0
						AADD(xCLFISCAL,_CLASFIS)
					Endif
					AADD(xCOD_FIS ,_CLASFIS)
				Next
			ELSE
				ALERT ("USUÁRIO ! VEJA O PRODUTO UTILIZADO"+xCOD_PRO[I])
			ENDIF
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Pesquisa da Condicao de Pagto               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			dbSelectArea("SE4")                    // Condicao de Pagamento
			dbSetOrder(1)
			dbSeek(xFilial("SE4")+xCOND_PAG)
			xDESC_PAG := SE4->E4_DESCRI
			If xTIPO == "D"
				dbSelectArea("SA1")                // * Cadastro de Clientes
				dbSetOrder(1)
				dbSeek(xFilial()+xFORNECE)
				xCOD_CLI :=SA1->A1_COD             // Codigo do Cliente
				xNOME_CLI:=SA1->A1_NOME            // Nome
				xEND_CLI :=SA1->A1_END             // Endereco
				xBAIRRO  :=SA1->A1_BAIRRO          // Bairro
				xCEP_CLI :=SA1->A1_CEP             // CEP
				xCOB_CLI :=SA1->A1_ENDCOB          // Endereco de Cobranca
				xREC_CLI :=SA1->A1_ENDENT          // Endereco de Entrega
				xMUN_CLI :=SA1->A1_MUN             // Municipio
				xEST_CLI :=SA1->A1_EST             // Estado
				xCGC_CLI :=SA1->A1_CGC             // CGC
				xINSC_CLI:=SA1->A1_INSCR           // Inscricao estadual
				xTRAN_CLI:=SA1->A1_TRANSP          // Transportadora
				xTEL_CLI :=SA1->A1_TEL             // Telefone
				xFAX_CLI :=SA1->A1_FAX             // Fax
			Else
				dbSelectArea("SA2")                // * Cadastro de Fornecedores
				dbSetOrder(1)
				dbSeek(xFilial("SA2")+xFORNECE+xLOJA)
				xCOD_CLI :=SA2->A2_COD                // Codigo do Cliente
				xNOME_CLI:=SA2->A2_NOME               // Nome
				xEND_CLI :=SA2->A2_END                // Endereco
				xBAIRRO  :=SA2->A2_BAIRRO             // Bairro
				xCEP_CLI :=SA2->A2_CEP                // CEP
				xCOB_CLI :=""                         // Endereco de Cobranca
				xREC_CLI :=""                         // Endereco de Entrega
				xMUN_CLI :=SA2->A2_MUN                // Municipio
				xEST_CLI :=SA2->A2_EST                // Estado
				xCGC_CLI :=SA2->A2_CGC                // CGC
				xINSC_CLI:=SA2->A2_INSCR              // Inscricao estadual
				xTRAN_CLI:=SA2->A2_TRANSP             // Transportadora
				xTEL_CLI :=SA2->A2_TEL                // Telefone
				xFAX     :=SA2->A2_FAX                // Fax
			EndIf
			dbSelectArea("SE1")                   // * Contas a Receber
			dbSetOrder(1)
			xPARC_DUP  :={}                       // Parcela
			xVENC_DUP  :={}                       // Vencimento
			xVALOR_DUP :={}                       // Valor
			xDUPLICATAS:=IIF(dbSeek(xFilial()+xSERIE+xNUM_DUPLIC,.T.),.T.,.F.) // Flag p/Impressao de Duplicatas
			while !eof() .and. SE1->E1_NUM==xNUM_DUPLIC .and. xDUPLICATAS==.T.
				AADD(xPARC_DUP ,SE1->E1_PARCELA)
				AADD(xVENC_DUP ,SE1->E1_VENCTO)
				AADD(xVALOR_DUP,SE1->E1_VALOR)
				dbSkip()
			EndDo
			dbSelectArea("SF4")                   // * Tipos de Entrada e Saida
			dbSetOrder(1)
			dbSeek(xFilial()+SD1->D1_TES)
			xNATUREZA:=SF4->F4_TEXTO              // Natureza da Operacao
			xNOME_TRANSP :=" "           // Nome Transportadora
			xEND_TRANSP  :=" "           // Endereco
			xMUN_TRANSP  :=" "           // Municipio
			xEST_TRANSP  :=" "           // Estado
			xVIA_TRANSP  :=" "           // Via de Transporte
			xCGC_TRANSP  :=" "           // CGC
			xTEL_TRANSP  :=" "           // Fone
			xTPFRETE     :=" "           // Tipo de Frete
			xVOLUME      := 0            // Volume
			xESPECIE     :=" "           // Especie
			xPESO_LIQ    := 0            // Peso Liquido
			xPESO_BRUTO  := 0            // Peso Bruto
			xCOD_MENS    :=" "           // Codigo da Mensagem
			xMENSAGEM    :=" "           // Mensagem da Nota
			xPeso_liq :=" "
			dbSelectArea("SF4")                   // * Tipos de Entrada e Saida
			DbSetOrder(1)
			dbSeek(xFilial("SF4")+xTES[1])
			xNATUREZA:=SF4->F4_TEXTO              // Natureza da Operacao
			Imprime()
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Termino da Impressao da Nota Fiscal                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IncRegua()                    // Termometro de Impressao
			nLin:=0
			dbSelectArea("SF1")
			dbSkip()                     // e passa para a proxima Nota Fiscal
		EndDo
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³                                                              ³
	//³                      FIM DA IMPRESSAO                        ³
	//³                                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Fechamento do Programa da Nota Fiscal                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	dbSelectArea("SF2")
	Retindex("SF2")
	dbSelectArea("SF1")
	Retindex("SF1")
	dbSelectArea("SD2")
	Retindex("SD2")
	dbSelectArea("SD1")
	Retindex("SD1")
	Set Device To Screen
	
	If aReturn[5] == 1
		Set Printer TO
		dbcommitAll()
		ourspool(wnrel)
	Endif
	
MS_FLUSH()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fim do Programa                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³                                                              ³
//³                   FUNCOES ESPECIFICAS                        ³
//³                                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ VERIMP   ³ Autor ³   Marcos Simidu       ³ Data ³ 20/12/95 ³±±
±±³FONTE     ³          ³ ALTER ³   Franciney Alves     ³ Data ³ 28/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica posicionamento de papel na Impressora             ³±±
±±³Uso       ³ Especifico para Clientes Microsiga                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicio da Funcao    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

// Substituido pelo assistente de conversao do AP5 IDE em 19/05/01 ==> Function VerImp
Static Function VerImp()

	nLin:= 0                // Contador de Linhas
	nLinIni:=0
	If aReturn[5]==2
		
		nOpc       := 1
		#IFNDEF WINDOWS
			cCor       := "B/BG"
		#ENDIF
		While .T.
			
			SetPrc(0,0)
			dbCommitAll()
			
			@ nLin ,000 PSAY "."
			@ nLin ,004 PSAY "*"
			@ nLin ,022 PSAY "."
			#IFNDEF WINDOWS
				Set Device to Screen
				DrawAdvWindow(" Formulario ",10,25,14,56)
				SetColor(cCor)
				@ 12,27 Say "Formulario esta posicionado?"
				nOpc:=Menuh({"Sim","Nao","Cancela Impressao"},14,26,"b/w,w+/n,r/w","SNC","",1)
				Set Device to Print
			#ELSE
				IF MsgYesNo("Fomulario esta posicionado ? ")
					nOpc := 1
				ElseIF MsgYesNo("Tenta Novamente ? ")
					nOpc := 2
				Else
					nOpc := 3
				Endif
			#ENDIF
			
			Do Case
				Case nOpc==1
					lContinua:=.T.
					Exit
				Case nOpc==2
					Loop
				Case nOpc==3
					lContinua:=.F.
					Return
			EndCase
		End
	Endif
	
Return

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fim da Funcao       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ IMPDET   ³ Autor ³   Marcos Simidu       ³ Data ³ 20/12/95 ³±±
±±³FONTE     ³          ³ ALTER ³   Franciney Alves     ³ Data ³ 28/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impressao de Linhas de Detalhe da Nota Fiscal              ³±±
±±³Uso       ³ Especifico para Clientes Microsiga                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Nfiscal                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicio da Funcao    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

// Substituido pelo assistente de conversao do AP5 IDE em 19/05/01 ==> Function IMPDET
Static Function IMPDET()
	if lIcmsPresumido
		nTamDet := 10            // Tamanho da Area de Detalhe ALTERADO DE 12 P/ 08
	else
		nTamDet :=13            // Tamanho da Area de Detalhe ALTERADO DE 12 P/ 08
	endif
	I:=1
	J:=1
	
	xB_ICMS_SOL:=0          // Base  do ICMS Solidario
	xV_ICMS_SOL:=0          // Valor do ICMS Solidario
	xTOTQTD    :=0
	xTotqtdcf:=0            // totalizador de Totais de Chapas ou Fardos
	TRACO:=" "
	
	For I:=1 to nTamDet
		If I <= Len(xCOD_PRO)
			@ nLin,  05  PSAY xCOD_PRO[I]  //Potencial 6 p/ 5
			
			IF MV_PAR04 == 2
				TRACO := " "
				
				UNEMB := ALLTRIM(xUNEMB[I])
				If Ascan(aUNEMB, UNEMB) == 0
					AADD(aUNEMB, UNEMB)
				Endif
				
				TDESC:=LEN(ALLTRIM(IIF(xQTDCF[I]<>0,alltrim(str(xQTDCF[I],0))+" --> "," ")+xDESC_PRO[I]))
				
				IF TDESC > 40
					IF SUBSTR(SUBSTR(IIF(xQTDCF[I]<>0,alltrim(str(xQTDCF[I],0))+UNEMB+"."," ")+xDESC_PRO[I],1,41),41,1)<>SPACE(1).AND.SUBSTR(SUBSTR(IIF(xQTDCF[I]<>0,alltrim(str(xQTDCF[I],0))+UNEMB+"."," ")+xDESC_PRO[I],1,40),40,1)<>SPACE(1)
						TRACO:="-"
					ELSE
						TRACO:=" "
					ENDIF
				ENDIF
				
				@ nLin, 018  PSAY SUBSTR(IIF(xQTDCF[I]<>0,alltrim(str(xQTDCF[I],0))+UNEMB+"."," ")+xDESC_PRO[I],1,40)+TRACO  //Potencial 22 p 20
			ELSE
				UNEMB:=ALLTRIM(xUNEMB[I])
				
				If Ascan(aUNEMB, UNEMB)==0
					AADD(aUNEMB,UNEMB)
				Endif
				
				TDESC := LEN(ALLTRIM(xDESC_PRO[I]))
				
				IF TDESC > 40
					IF SUBSTR( SUBSTR(xDESC_PRO[I],1,41) ,41,1) <> SPACE(1) .AND. SUBSTR( SUBSTR(xDESC_PRO[I] ,1 ,40) ,40,1) <> SPACE(1)
						TRACO:="-"
					ELSE
						TRACO:=" "
					ENDIF
				ENDIF
				
				@ nLin, 018  PSAY SUBSTR(xDESC_PRO[I],1,40)+TRACO //Potencial 22 para 20
			ENDIF
			
			
			@ nLin, 069  PSAY xCOD_FIS[I] //Potencial 72 para 70
			@ nLin, 073  PSAY xCLASFIS[I] //Potencial Substituicao de XCOD_TRIB por xCLASFIS, de 77 para 73
			@ nLin, 079  PSAY xUNID_PRO[I] // de 82 para 79
			@ nLin, 081  PSAY xQTD_PRO[I]   Picture"@E 9,9999.999" // quatidade de produto  //Potencial de 84 para 81
			xTOTQTD:=xTOTQTD+xQTD_PRO[I]
			
			IF MV_PAR04==2
				xTotqtdcf:=xTotqtdcf+xQTDCF[I]
			ENDIF
			
			@ nLin, 088  PSAY xPRE_UNI[I]               Picture"@E 99,999,999.99"  // de 091 para 088
			@ nLin, 111  PSAY xVAL_MERC[I]              Picture"@E 99,999,999.99"  // de 112 para 111
			IF SF4->F4_ICM=='S'
					if lIcmsPresumido = .f. .and. SA1->A1_EST<>"EX"
						@ nLin, 127  PSAY xICM_PROD[I]              Picture"99"
					Endif	
			ENDIF
			@ nLin, 130  PSAY xIPI[I]                   Picture"99"
			@ nLin, 134  PSAY xVAL_IPI[I]               Picture"@E 9,999,999.99"
			IF MV_PAR04==2
				IF TDESC > 40
					NLIN:=NLIN+1
					IF SUBSTR(SUBSTR(IIF(xQTDCF[I]<>0,alltrim(str(xQTDCF[I],0))+UNEMB+"."," ")+xDESC_PRO[I],41,41),41,1)<>SPACE(1).AND.SUBSTR(SUBSTR(xDESC_PRO[I],41,41),40,1)<>SPACE(1)
						TRACO:="-"
					ELSE
						TRACO:=" "
					ENDIF
					@ nLin,  20  PSAY SUBSTR(IIF(xQTDCF[I]<>0,alltrim(str(xQTDCF[I],0))+UNEMB+"."," ")+xDESC_PRO[I],41,40)+TRACO //Potencial 18 para 20
				ENDIF
				IF TDESC >90  //Potencial 80 para 90
					NLIN:=NLIN+1
					@ nLin,  20  PSAY SUBSTR(IIF(xQTDCF[I]<>0,alltrim(str(xQTDCF[I],0))+UNEMB+"."," ")+xDESC_PRO[I],80,120)  //Potencial  18 para 20
				ENDIF
			ELSE
				IF TDESC > 40
					NLIN:=NLIN+1
					IF SUBSTR(SUBSTR(xDESC_PRO[I],41,41),41,1)<>SPACE(1).AND.SUBSTR(SUBSTR(xDESC_PRO[I],41,41),40,1)<>SPACE(1)
						TRACO:="-"
					ELSE
						TRACO:=" "
					ENDIF                         `
					
					alerta(xDESC_PRO[I])
					
					@ nLin,  20  PSAY SUBSTR(xDESC_PRO[I],41,40)+TRACO //Potencia 18 para 20
				ENDIF
				
				IF TDESC >90  //Potencial
					nLin := nLin + 1
					@ nLin,  20  PSAY SUBSTR(xDESC_PRO[I],80, 120)  //Potencia 18 para 20
				ENDIF
			ENDIF
			J:=J+1
		Endif
		
		nLin :=nLin+1
	Next
	
Return

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fim da Funcao       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ CLASFIS  ³ Autor ³   Marcos Simidu       ³ Data ³ 16/11/95 ³±±
±±³FONTE     ³          ³ ALTER ³   Franciney Alves     ³ Data ³ 28/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impressao de Array com as Classificacoes Fiscais           ³±±
±±³Uso       ³ Especifico para Clientes Microsiga                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Nfiscal                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicio da Funcao    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

// Substituido pelo assistente de conversao do AP5 IDE em 19/05/01 ==> Function CLASFIS
Static Function CLASFIS()
	NCOL:=06
	@ nLin,006 PSAY "Classificacao Fiscal"
	nLin := nLin + 1
	For nCont := 1 to Len(xCLFISCAL)
		IF nCont <= 12
			nCol := If(Mod(nCont,2) != 0, 06, 33)
			@ nLin, nCol   PSAY xCLFISCAL[nCont] + "-"
			@ nLin, nCol+ 05 PSAY Transform(xCLAS_FIS[nCont],"@r 99.99.99.99.99")
			nLin := nLin + If(Mod(nCont,2) != 0, 0, 1)
		ENDIF
	Next
	
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ IMPMENP  ³ Autor ³   Marcos Simidu       ³ Data ³ 20/12/95 ³±±
±±³FONTE     ³          ³ ALTER ³   Franciney Alves     ³ Data ³ 28/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impressao Mensagem Padrao da Nota Fiscal                   ³±±
±±³Uso       ³ Especifico para Clientes Microsiga                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Nfiscal                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicio da Funcao    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

// Substituido pelo assistente de conversao do AP5 IDE em 19/05/01 ==> Function IMPMENP
Static Function IMPMENP()
	
	nCol:= 05	
	If !Empty(xCOD_MENS)
		@ nLin, NCol PSAY FORMULA(xCOD_MENS)
		nLin++
		@ nLin, NCol PSAY FORMULA("002")	
	Endif
Return

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fim da Funcao       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MENSOBS  ³ Autor ³   Marcos Simidu       ³ Data ³ 20/12/95 ³±±
±±³FONTE     ³          ³ ALTER ³   Franciney Alves     ³ Data ³ 28/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impressao Mensagem no Campo Observacao                     ³±±
±±³Uso       ³ Especifico para Clientes Microsiga                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Nfiscal                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicio da Funcao    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

// Substituido pelo assistente de conversao do AP5 IDE em 19/05/01 ==> Function MENSOBS
Static Function MENSOBS()

	nTamObs:=75
	nCol:=05
	@ nLin, nCol PSAY UPPER(SUBSTR(xMENSAGEM,1,nTamObs))
	nlin:=nlin+1
	@ nLin, nCol PSAY UPPER(SUBSTR(xMENSAGEM,70,nTamObs))
	@ 58,100 PSAY xNUM_SF // 57
	@ 58,120 PSAY xSERIE_SF  // 57
	nlin:=nlin+1
	@ nLin, nCol PSAY UPPER(SUBSTR(xMENSAGEM,270,nTamObs))
Return
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fim da Funcao       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ DUPLIC   ³ Autor ³   Marcos Simidu       ³ Data ³ 20/12/95 ³±±
±±³FONTE     ³          ³ ALTER ³   Franciney Alves     ³ Data ³ 28/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impressao do Parcelamento das Duplicacatas                 ³±±
±±³Uso       ³ Especifico para Clientes Microsiga                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Nfiscal                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicio da Funcao    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// Substituido pelo assistente de conversao do AP5 IDE em 19/05/01 ==> Function DUPLIC
Static Function DUPLIC()
	nCol := 5
	nAjuste := 0
	For BB:= 1 to Len(xVALOR_DUP)
		If xDUPLICATAS==.T. .and. BB<=Len(xVALOR_DUP)
		    @ nLin, nCol + nAjuste PSAY xNUM_DUPLIC
			@ nLin, nCol + 11 + nAjuste PSAY xVENC_DUP[BB]  //Potencial 11
			@ nLin, nCol + 29 + nAjuste PSAY xVALOR_DUP[BB] Picture("@E 9,999,999.99") //Potencial 29
			nAjuste := nAjuste + 50
		Endif
	Next
Return

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fim da Funcao       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ LI       ³ Autor ³   Marcos Simidu       ³ Data ³ 20/12/95 ³±±
±±³FONTE     ³          ³ ALTER ³   Franciney Alves     ³ Data ³ 28/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Pula 1 linha                                               ³±±
±±³Uso       ³ Especifico para Clientes Microsiga                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Nfiscal                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicio da Funcao    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fim da Funcao       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ IMPRIME  ³ Autor ³   Marcos Simidu       ³ Data ³ 20/12/95 ³±±
±±³FONTE     ³          ³ ALTER ³   Franciney Alves     ³ Data ³ 28/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime a Nota Fiscal de Entrada e de Saida                ³±±
±±³Uso       ³ Especifico para Clientes Microsiga                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Nfiscal                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
// Substituido pelo assistente de conversao do AP5 IDE em 19/05/01 ==> Function Imprime
Static Function Imprime()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³                                                              ³
	//³              IMPRESSAO DA N.F. DA Nfiscal                    ³
	//³                                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Impressao do Cabecalho da N.F.      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	@ 00, 000 PSAY Chr(15)                // Compressao de Impressao
	
	@ 01, 140 PSAY xNUM_NF               // Numero da Nota Fiscal
	
	If mv_par04 == 1
		@ 03, 113 PSAY "X"
	Else
		@ 03, 100 PSAY "X"
	Endif                 
	/*
	If xCOD_MENS=="001"
		@ 06, 005 PSAY FORMULA(xCOD_MENS)
	Endif
    */
	
	// @ 06, 005 PSAY "SW-FM/COC-019 & SW-COC-1499"
	
	// @ 06, 005 PSAY CHR(18)
	
	// @ 06, 005 PSAY CHR(18)
	
	@ 09, 006 PSAY xNATUREZA               // Texto da Natureza de Operacao
	@ 09, 047 PSAY xCF[1] Picture"@R 9.999" // Codigo da Natureza de Operacao
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Impressao dos Dados do Cliente      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nrCGC := 14
	@ 12, 006 PSAY xNOME_CLI              //Nome do Cliente
	If !EMPTY(xCGC_CLI)                   // Se o C.G.C. do Cli/Forn nao for Vazio
		@ 12, 101 PSAY xCGC_CLI Picture"@R 99.999.999/9999-99"
	Else
		@ 12, 110 PSAY " "                // Caso seja vazio
	Endif
	@ 12,134 PSAY xEMISSAO
	@ 14, 006 PSAY xEND_CLI                                 // Endereco
	@ 14, 087 PSAY xBAIRRO                                  // Bairro
	@ 14, 114 PSAY xCEP_CLI Picture"@R 99999-999"           // CEP
	@ 14, 134 PSAY xSAIDA                                   // Data de Saida
	// @ 14, 143 PSAY " "                                      // Reservado  p/Data Saida/Entrada
	@ 16, 006 PSAY xMUN_CLI                                 // Municipio
	@ 16, 070 PSAY xTEL_CLI                                 // Telefone/FAX
	@ 16, 087 PSAY xEST_CLI                                 // U.F.
	@ 16, 099 PSAY xINSC_CLI                                 // Insc. Estadual
	@ 16, 134 PSAY xHSaida                                   // Hora da Saida
	If mv_par04 == 2
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Impressao da Fatura/Duplicata       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nLin:=19
		BB:=1
		nCol := 10             //  duplicatas  /Potencial de 10 para 7
		DUPLIC()
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Dados dos Produtos Vendidos         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nLin := 23
	
	
	//Impressao da Descricao
	ImpDet()                 // Detalhe da NF
	
	
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Mensagem da Nota Fiscal             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


	if lIcmsPresumido = .t. .and. SA1->A1_EST<>"EX"
		@ 034,050 PSAY "Desconto 12% Credito Presumido" + "  " + Alltrim(Transform(nIcmsPresumido,"@E@Z 999,999,999.99")) + "  " + "Conf."
		@ 035,050 PSAY "Caput do Art 24 do Dec. 20686/99  RICMS/AM."
		
	Endif

	

	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Prestacao de Servicos Prestados     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(xISS) > 0
		MensObs()
		@ 37, 142  PSAY xTOT_FAT  Picture"@E@Z 999,999,999.99"   // Valor do Servico
	Endif
	
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calculo dos Impostos                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	xCONVER:=(xTOT_FAT/xTXCAMBIO)    // NUMCA VAI BATER DEVIDO A DIFERENCA DE ARRED DE VALOR MEDIO EM OUTRA MOEDA
	xConver := mv_par17 
	IF MV_PAR04==2
		@ 35, 010  PSAY IIF(!EMPTY(xTNCONTAI),"Containers :",'')
		@ 35, 023  PSAY xTNCONTAI    // NUMEROS DOS CONTAINERS
		@ 36, 026  PSAY IIF(!EMPTY(xTXCAMBIO), "Taxa Cambio" ,"")
		@ 36, 042  PSAY Alltrim(Transform(xTXCAMBIO,"@E@Z 999.99999"))  // TAXA do CAMBIO
	ENDIF
	@ 36, 050  PSAY IIF((xCONVER<>0),mv_par15,'')   // Conversao do Dolar
	@ 36, 055  PSAY Alltrim(Transform(XCONVER,"@E@Z 999,999,999.99"))          // Conversao do Dolar
	
	dbSelectArea("SF4")                   // * Tipos de Entrada e Saida
	DbSetOrder(1)
	dbSeek(xFilial("SF4")+xTES[1])
	IF SF4->F4_ICM=='S'
		@ 38, 010  PSAY xBASE_ICMS  Picture"@E@Z 999,999,999.99"  // Base do ICMS
		@ 38, 038  PSAY xVALOR_ICMS Picture"@E@Z 999,999,999.99"  // Valor do ICMS
	ENDIF
	@ 38, 067  PSAY xBSICMRET   Picture"@E@Z 999,999,999.99"  // Base ICMS Ret.
	@ 38, 096  PSAY xICMS_RET   Picture"@E@Z 999,999,999.99"  // Valor  ICMS Ret.
	@ 38, 128  PSAY (xVALOR_MERC+nIcmsPresumido) Picture"@E@Z 999,999,999.99"  // Valor Tot. Prod.
	@ 40, 010  PSAY xFRETE      Picture"@E@Z 999,999,999.99"  // Valor do Frete
	@ 40, 038  PSAY xSEGURO     Picture"@E@Z 999,999,999.99"  // Valor Seguro
	@ 40, 062  PSAY xDESPESA    Picture"@E@Z 999,999,999.99"  // Valor Despesa
	@ 40, 096  PSAY xVALOR_IPI  Picture"@E@Z 999,999,999.99"  // Valor do IPI
	@ 40, 128  PSAY xTOT_FAT    Picture"@E@Z 999,999,999.99"  // Valor Total NF
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Impressao Dados da Transportadora  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@ 43, 006  PSAY xNOME_TRANSP                       // Nome da Transport.
	If xTPFRETE=='C'                                   // Frete por conta do
		@ 43, 086 PSAY "1"                              // Emitente (1) 
	Else                                               //     ou
		@ 43, 086 PSAY "2"                              // Destinatario (2)
	Endif
	@ 43, 092 PSAY xPLACA                               // Res. p/Placa do Veiculo
	@ 43, 108 PSAY xUF                                  // U.F. Cavalo
	@ 43, 092 PSAY xPLACA2                              // Res. p/Placa do Carreta
	@ 43, 108 PSAY xUF2                                  // U.F. Carreta	
	If !EMPTY(xCGC_TRANSP)                              // Se C.G.C. Transportador nao for Vazio
		@ 43, 123 PSAY xCGC_TRANSP Picture"@R 99.999.999/9999-99"
	Else
		@ 43, 123 PSAY " "                               // Caso seja vazio
	Endif
	@ 45, 006 PSAY xEND_TRANSP                          // Endereco Transp.
	@ 45, 074 PSAY xMUN_TRANSP                          // Municipio
	@ 45, 108 PSAY xEST_TRANSP                          // U.F. Transportadora
	@ 45, 125 PSAY " "                                  // Reservado p/Insc. Estad.
	
	IF MV_PAR04==2
		@ 47, 008 PSAY xVOLUME       Picture"@E@Z 999,999" // Res para Numero de Fardos  //Potencial - Substituindo o campo xTotqtdcf
		IF xtotqtdcf <> 0
			For Y := 1 to Len(aUNEMB)
				IF Y <= 3
					@ 47, 022+(Y*4)   PSAY AUNEMB[Y] + "/"                // Res para Numero de Fardos OU CAIXAS
				ENDIF
			Next
		Endif
	ENDIF
	@ 47, 026 PSAY xESPECIE Picture"@!"                          // Especie
	@ 47, 058 PSAY MV_PAR11                                           // Res para Marca
	@ 47, 082 PSAY xTOTQTD   Picture"@E@Z 999,999.999"
	@ 47, 092 PSAY xUNID_PRO[1]
	@ 47, 109 PSAY xPESO_BRUTO     Picture"@E@Z 999,999.99"      // Res para Peso Bruto
	@ 47, 137 PSAY xPeso_liq    Picture"@E@Z 999,999.99"      // Res para Peso Liquido
	If mv_par04 == 2
		nLin := 50
		Clasfis()               // Impressao de Classif. Fiscal
		nLin := 52
     	Impmenp()
	Endif
	// nLin := 52	
	// if mv_par13==1
		//@ nLin, 005 PSAY chr(18) + chr(15)    //18
		// @ nLin, 005 PSAY "A.T.P.F"  //ATPF
		// @ nLin, 015 PSAY mv_par12   // NUMERO DA ATPF
		// @ nLin, 005 PSAY chr(15)   //15
	// EndIF
	@ nLin ,110 PSAY xNUM_NF
	nLin := 54
	if mv_par14==1
		xLei:="Nao incidencia de ICMS conf. ART 4o Inciso II - Dec 20686/99"
		@ nLin, 005 PSAY xLei  //Lei Estadual 20686/99
	elseif mv_par14==2
		xLei:="Suspensao de ICMS Conf. Art. 11 Inciso IV Dec.20.686/99 - RICMS/AM"
		@ nLin, 005 PSAY xLei  //Lei Estadual 20686/99
	elseif mv_par14==3
		xLei:="Nao incidencia de ICMS Conf. Art. 4o Inciso X Dec 20686/99 - RICMS/AM"
		@ nLin, 005 PSAY xLei  //Lei Estadual 20686/99
	Elseif ALLTRIM(xCF[1]) == "5905"     
		xLei:="Nao incidencia de ICMS Conf. Art. 4o Inciso XIV Dec 20686/99 - RICMS/AM"
		@ nLin, 005 PSAY xLei  //Lei Estadual 20686/99	
	Endif

	
	if mv_par16==1
		xLeiF1:="Imuni da incid.IPI Art.153 Par.3,Inc.III da Const.Fed.(Art.18 Inc.II"
		xLeiF2:= "Dec.4544/02 do RIPI)"
		@ 55, 005 PSAY xLeiF1  //Lei Federal 01
		@ 56, 005 PSAY xLeiF2  //Lei Federal 01
	Elseif 	ALLTRIM(SA1->A1_MUN) == "MANAUS" .and. ALLTRIM(xTES[1]) == "506"
	    xLeiE1:="REDUZIDO A ZERO AS ALIQ DO PIS/COFINS, CONF"
		xLeiE2:= "ARTIGO 2 DA LEI NR. 10.996/2004 "
		@ 55, 005 PSAY xLeiE1  //Lei Estadual Linha 01
		@ 56, 005 PSAY xLeiE2  //Lei Estadual Linha 02
	
	Endif


	
	If mv_par04 == 2 .and. Len(xISS) == 0
		nLin:=57
		MensObs()             // Imprime Mensagem de Observacao
	Endif
	if mv_par06== 1
	  @ 59, 005 PSAY "DISPENSA DA EMISSAO DE DOF. CONF. ART.9.INCISO II DA I.N.112 DE 21/08/2006" 
	EndIf

	If Len(xNUM_NFDV) > 0  .and. !Empty(xNUM_NFDV[1])
		@ 61, 006 PSAY "Nota Fiscal Original No." + "  " + xNUM_NFDV[1] + "  " + xPREF_DV[1]
	Endif
	
	If !Empty(xSuframa)
		@ 61,60 PSAY "SUFRAMA : "+xSuframa
	EndIf
	
	@ 61, 134 PSAY xNUM_NF                   // Numero da Nota Fiscal
	
	
//	@ 62, 000 PSAY chr(15) + chr(18)                   // Descompressao de Impressao
	
	SetPrc(0,0)                              // (Zera o Formulario)
Return .t.
